{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/numbers.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChangeHandler","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","deleteItem","map","person","className","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","updatedObject","itemUrl","put","delete","Notification","message","App","useState","setPersons","setNewName","setNewNumber","nameFilter","setNameFilter","notificationMessage","setNotificationMessage","useEffect","numberService","initialNumbers","showNotification","time","error","setTimeout","updateNumber","find","catch","filter","personsToShow","toLowerCase","includes","e","target","preventDefault","window","confirm","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12fb2311.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ value, onChangeHandler }) => {\r\n    return (\r\n        <div>\r\n            Filter shown with <input value={value} onChange={onChangeHandler} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = ({addName, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\n\r\nconst Persons = ({ persons, deleteItem }) => {\r\n    return <ul>\r\n        {persons.map(person =>\r\n            <li className=\"person\" key={person.name}>\r\n                {person.name} {person.number}\r\n                <button className=\"deletebutton\" onClick={() => deleteItem(person.id)}>-</button>\r\n            </li>)}\r\n    </ul>\r\n};\r\n\r\nexport default Persons;","import axios from 'axios';\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst updateNumber = (id, updatedObject) => {\r\n    const itemUrl = `${baseUrl}/${id}`;\r\n    const request = axios.put(itemUrl, updatedObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deleteItem = id => {\r\n    const itemUrl = `${baseUrl}/${id}`;\r\n    return axios.delete(itemUrl);\r\n};\r\n\r\n\r\n\r\n\r\nexport default { getAll, create, updateNumber, deleteItem };","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    if (message[0] === null) {\r\n        return(\r\n        <div className=\"emptymessage\">\r\n            \r\n        </div>\r\n        );\r\n    };\r\n\r\n    let id;\r\n    if(message[1]){\r\n        id = \"error\";\r\n    }else{\r\n        id =\"\";\r\n    }\r\n    return (\r\n        <div className=\"message\" id={id}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport numberService from \"./services/numbers\";\r\nimport Notification from './components/Notification';\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState(\"\");\r\n    const [nameFilter, setNameFilter] = useState(\"\");\r\n    const [notificationMessage, setNotificationMessage] = useState([null, false]);\r\n\r\n    useEffect(() => {\r\n        numberService\r\n            .getAll()\r\n            .then(initialNumbers => {\r\n                setPersons(initialNumbers);\r\n            });\r\n    }, []);\r\n\r\n    const deleteItem = (id) => {\r\n        const name = persons.find(person => person.id === id).name;\r\n        if (window.confirm(`Do you want to delete ${name}?`)) {\r\n            numberService.deleteItem(id)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    showNotification(`Deleted ${name}`, 2000);\r\n                    setPersons(persons.filter(person => person.id !== id));\r\n                    setNewName(\"\");\r\n                    setNewNumber(\"\");\r\n                }).catch(error => {\r\n                    showNotification(\r\n                        `${name} has already been removed from the server`,\r\n                        2000, true);\r\n                    setPersons(persons.filter(person => person.id !== id));\r\n                    setNewName(\"\");\r\n                    setNewNumber(\"\");\r\n                });\r\n\r\n        };\r\n    };\r\n\r\n\r\n    const handleNameChange = (e) => {\r\n        setNewName(e.target.value);\r\n    };\r\n\r\n    const handleNumberChange = (e) => {\r\n        setNewNumber(e.target.value);\r\n    };\r\n\r\n    const handleFilterChange = (e) => {\r\n        setNameFilter(e.target.value);\r\n    };\r\n\r\n    const addName = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (persons.find(person => person.name === newName)) {\r\n            if (window.confirm(`${newName} is already in the phonebook. Replace the old number with a new one?`)) {\r\n                updateNumber();\r\n                return;\r\n            } else {\r\n                setNewName(\"\");\r\n                setNewNumber(\"\");\r\n                return;\r\n            }\r\n        };\r\n\r\n        const newObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        };\r\n\r\n        numberService\r\n            .create(newObject)\r\n            .then(newNumber => {\r\n                setPersons(persons.concat(newNumber));\r\n                setNewName(\"\");\r\n                setNewNumber(\"\");\r\n                showNotification(`Added ${newNumber.name}`, 2000);\r\n            });\r\n\r\n    };\r\n\r\n    const showNotification = (message, time, error) => {\r\n        if (error) {\r\n            setNotificationMessage([message, true]); \r\n        } else {\r\n            setNotificationMessage([message, false]);\r\n        }\r\n        setTimeout(() => {\r\n            setNotificationMessage([null, false]);\r\n        }, time);\r\n    };\r\n\r\n    const updateNumber = () => {\r\n        const person = persons.find(person => person.name === newName);\r\n        const updatedObject = { ...person, number: newNumber };\r\n        numberService\r\n            .updateNumber(person.id, updatedObject)\r\n            .then(response => {\r\n                setPersons(persons.map(person =>\r\n                    person.id !== updatedObject.id ? person : response));\r\n                showNotification(`Updated number for ${updatedObject.name}`, 2000);\r\n            })\r\n            .catch(error => {\r\n                showNotification(`Information of ${updatedObject.name} has already been removed from the sever`, 2000, true);\r\n                setPersons(persons.filter(person => person.id !== updatedObject.id));\r\n                setNewName(\"\");\r\n                setNewNumber(\"\");\r\n            });\r\n\r\n    };\r\n\r\n    const personsToShow = persons.filter(person =>\r\n        person.name.toLowerCase().includes(nameFilter.toLowerCase())\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Phonebook</h1>\r\n            <Notification message={notificationMessage} />\r\n            <Filter value={nameFilter} onChangeHandler={handleFilterChange} />\r\n\r\n            <h2>Add a new</h2>\r\n\r\n            <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange}\r\n                newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n\r\n            <h2>Numbers</h2>\r\n\r\n            <Persons persons={personsToShow} deleteItem={deleteItem} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\"\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}